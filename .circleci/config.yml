version: 2.1

docker_defaults: &docker_defaults
  docker:
    - image: cimg/base:stable

machine_defaults: &machine_defaults
  machine:
    docker_layer_caching: true

orbs:
  kube-orb: circleci/kubernetes@0.11.1

jobs:
  build-image:
    <<: *machine_defaults
    steps:
      - checkout
      - run:
          name: Build and Push Docker Image
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY_URL}
            docker build -f .deployment/Dockerfile -t ${DOCKER_REGISTRY_URL}/${DOCKER_USERNAME}/twtbot/bot:${CIRCLE_SHA1} .
            docker push ${DOCKER_REGISTRY_URL}/${DOCKER_USERNAME}/twtbot/bot:${CIRCLE_SHA1}
  deploy: &deploy
    <<: *docker_defaults
    steps:
      - checkout
      - kube-orb/install-kubectl
      - kube-orb/install-kubeconfig:
          kubeconfig: KUBE_CONFIG
      - run:
          name: Download s5s
          command: |
            curl -L https://github.com/Vinlock/s5s/releases/download/linux-latest/s5s > s5s
            chmod +x ./s5s
      - run:
          name: Apply Secrets
          command: ./s5s aws -o twtbot-secrets -s $AWS_SECRETS --accessKeyId $AWS_ACCESS_KEY_ID --accessKey $AWS_SECRET_ACCESS_KEY | kubectl apply -n thewebteam -f -
      - run:
          name: Replace Variables
          command: |
            sed -i "s|{{CIRCLE_SHA1}}|$CIRCLE_SHA1|" .deployment/deployment.yml
            sed -i "s|{{CIRCLE_BUILD_NUM}}|$CIRCLE_BUILD_NUM|" .deployment/deployment.yml
            sed -i "s|{{DOCKER_REGISTRY_URL}}|$DOCKER_REGISTRY_URL|" .deployment/deployment.yml
            sed -i "s|{{CIRCLE_BRANCH}}|$CIRCLE_BRANCH|" .deployment/deployment.yml
      - kube-orb/create-or-update-resource:
          resource-file-path: .deployment/deployment.yml
          show-kubectl-command: true
          namespace: thewebteam
          dry-run: true
      - kube-orb/create-or-update-resource:
          resource-file-path: .deployment/deployment.yml
          show-kubectl-command: true
          namespace: thewebteam
          dry-run: false
  deploy-production:
    environment:
      AWS_SECRETS: thewebteam/twtbot/production
    <<: *deploy

workflows:
  version: 2
  build:
    jobs:
      - build-image:
          context: docker-github-vinlock
      - deploy-production:
          context: k8s.dak.dev-prod
          requires:
            - build-image
          filters:
            branches:
              only:
                - production
